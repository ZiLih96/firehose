"use strict";(self.webpackChunkfirehose=self.webpackChunkfirehose||[]).push([[4],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),f=s(n),d=i,m=f["".concat(p,".").concat(d)]||f[d]||c[d]||l;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,a=new Array(l);a[0]=f;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var s=2;s<l;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7440:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return c}});var r=n(7462),i=n(3366),l=(n(7294),n(3905)),a=["components"],o={},p="Filters",s={unversionedId:"sinks/filters",id:"sinks/filters",title:"Filters",description:"Following variables need to be set to enable JSON/JEXL filters.",source:"@site/docs/sinks/filters.md",sourceDirName:"sinks",slug:"/sinks/filters",permalink:"/firehose/sinks/filters",draft:!1,editUrl:"https://github.com/odpf/firehose/edit/master/docs/docs/sinks/filters.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Configuration",permalink:"/firehose/sinks/overview"},next:{title:"Retries",permalink:"/firehose/sinks/retries"}},u={},c=[{value:"<code>FILTER_ENGINE</code>",id:"filter_engine",level:2},{value:"<code>FILTER_JSON_ESB_MESSAGE_TYPE</code>",id:"filter_json_esb_message_type",level:2},{value:"<code>FILTER_SCHEMA_PROTO_CLASS</code>",id:"filter_schema_proto_class",level:2},{value:"<code>FILTER_DATA_SOURCE</code>",id:"filter_data_source",level:2},{value:"<code>FILTER_JEXL_EXPRESSION</code>",id:"filter_jexl_expression",level:2},{value:"<code>FILTER_JSON_SCHEMA</code>",id:"filter_json_schema",level:2}],f={toc:c};function d(e){var t=e.components,n=(0,i.Z)(e,a);return(0,l.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"filters"},"Filters"),(0,l.kt)("p",null,"Following variables need to be set to enable JSON/JEXL filters."),(0,l.kt)("h2",{id:"filter_engine"},(0,l.kt)("inlineCode",{parentName:"h2"},"FILTER_ENGINE")),(0,l.kt)("p",null,"Defines whether to use ",(0,l.kt)("inlineCode",{parentName:"p"},"JSON")," Schema-based filters or ",(0,l.kt)("inlineCode",{parentName:"p"},"JEXL"),"-based filters or ",(0,l.kt)("inlineCode",{parentName:"p"},"NO_OP")," ","(","i.e. no filtering",")"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},"JSON")),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"optional")),(0,l.kt)("li",{parentName:"ul"},"Default value",(0,l.kt)("inlineCode",{parentName:"li"},": NO_OP"))),(0,l.kt)("h2",{id:"filter_json_esb_message_type"},(0,l.kt)("inlineCode",{parentName:"h2"},"FILTER_JSON_ESB_MESSAGE_TYPE")),(0,l.kt)("p",null,"Defines the format type of the input ESB messages, i.e. JSON/Protobuf. This field is required only for JSON filters."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},"JSON")),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"optional"))),(0,l.kt)("h2",{id:"filter_schema_proto_class"},(0,l.kt)("inlineCode",{parentName:"h2"},"FILTER_SCHEMA_PROTO_CLASS")),(0,l.kt)("p",null,"The fully qualified name of the proto schema so that the key/message in Kafka could be parsed."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},"com.gojek.esb.driverlocation.DriverLocationLogKey")),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"optional"))),(0,l.kt)("h2",{id:"filter_data_source"},(0,l.kt)("inlineCode",{parentName:"h2"},"FILTER_DATA_SOURCE")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"key"),"/",(0,l.kt)("inlineCode",{parentName:"p"},"message"),"/",(0,l.kt)("inlineCode",{parentName:"p"},"none"),"depending on where to apply filter"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},"key")),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"optional")),(0,l.kt)("li",{parentName:"ul"},"Default value",(0,l.kt)("inlineCode",{parentName:"li"},": none"))),(0,l.kt)("h2",{id:"filter_jexl_expression"},(0,l.kt)("inlineCode",{parentName:"h2"},"FILTER_JEXL_EXPRESSION")),(0,l.kt)("p",null,"JEXL filter expression"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},'driverLocationLogKey.getVehicleType()=="BIKE"')),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"optional"))),(0,l.kt)("h2",{id:"filter_json_schema"},(0,l.kt)("inlineCode",{parentName:"h2"},"FILTER_JSON_SCHEMA")),(0,l.kt)("p",null,"JSON Schema string containing the filter rules to be applied."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},'{"properties":{"order_number":{"const":"1253"}}}')),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"optional"))))}d.isMDXComponent=!0}}]);