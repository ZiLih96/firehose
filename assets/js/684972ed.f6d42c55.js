"use strict";(self.webpackChunkfirehose=self.webpackChunkfirehose||[]).push([[775],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return k}});var i=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,l=function(e,t){if(null==e)return{};var n,i,l={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=i.createContext({}),u=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=u(e.components);return i.createElement(p.Provider,{value:t},e.children)},_={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=u(n),k=l,m=d["".concat(p,".").concat(k)]||d[k]||_[k]||a;return n?i.createElement(m,r(r({ref:t},s),{},{components:n})):i.createElement(m,r({ref:t},s))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,r=new Array(a);r[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var u=2;u<a;u++)r[u]=n[u];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},215:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return k},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return _}});var i=n(7462),l=n(3366),a=(n(7294),n(3905)),r=["components"],o={},p="HTTP Sink",u={unversionedId:"sinks/http-sink",id:"sinks/http-sink",title:"HTTP Sink",description:"An Http sink Firehose \\(SINK_TYPE=http\\) requires the following variables to be set along with Generic ones.",source:"@site/docs/sinks/http-sink.md",sourceDirName:"sinks",slug:"/sinks/http-sink",permalink:"/firehose/sinks/http-sink",draft:!1,editUrl:"https://github.com/odpf/firehose/edit/master/docs/docs/sinks/http-sink.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"GRPC Sink",permalink:"/firehose/sinks/grpc-sink"},next:{title:"MongoDB Sink",permalink:"/firehose/sinks/mongo-sink"}},s={},_=[{value:"<code>SINK_HTTP_SERVICE_URL</code>",id:"sink_http_service_url",level:2},{value:"<code>SINK_HTTP_REQUEST_METHOD</code>",id:"sink_http_request_method",level:2},{value:"<code>SINK_HTTP_REQUEST_TIMEOUT_MS</code>",id:"sink_http_request_timeout_ms",level:2},{value:"<code>SINK_HTTP_MAX_CONNECTIONS</code>",id:"sink_http_max_connections",level:2},{value:"<code>SINK_HTTP_RETRY_STATUS_CODE_RANGES</code>",id:"sink_http_retry_status_code_ranges",level:2},{value:"<code>SINK_HTTP_DATA_FORMAT</code>",id:"sink_http_data_format",level:2},{value:"<code>SINK_HTTP_HEADERS</code>",id:"sink_http_headers",level:2},{value:"<code>SINK_HTTP_JSON_BODY_TEMPLATE</code>",id:"sink_http_json_body_template",level:2},{value:"<code>SINK_HTTP_PARAMETER_SOURCE</code>",id:"sink_http_parameter_source",level:2},{value:"<code>SINK_HTTP_PARAMETER_PLACEMENT</code>",id:"sink_http_parameter_placement",level:2},{value:"<code>SINK_HTTP_PARAMETER_SCHEMA_PROTO_CLASS</code>",id:"sink_http_parameter_schema_proto_class",level:2},{value:"<code>INPUT_SCHEMA_PROTO_TO_COLUMN_MAPPING</code>",id:"input_schema_proto_to_column_mapping",level:2},{value:"<code>SINK_HTTP_OAUTH2_ENABLE</code>",id:"sink_http_oauth2_enable",level:2},{value:"<code>SINK_HTTP_OAUTH2_ACCESS_TOKEN_URL</code>",id:"sink_http_oauth2_access_token_url",level:2},{value:"<code>SINK_HTTP_OAUTH2_CLIENT_NAME</code>",id:"sink_http_oauth2_client_name",level:2},{value:"<code>SINK_HTTP_OAUTH2_CLIENT_SECRET</code>",id:"sink_http_oauth2_client_secret",level:2},{value:"<code>SINK_HTTP_OAUTH2_SCOPE</code>",id:"sink_http_oauth2_scope",level:2}],d={toc:_};function k(e){var t=e.components,n=(0,l.Z)(e,r);return(0,a.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"http-sink"},"HTTP Sink"),(0,a.kt)("p",null,"An Http sink Firehose ","(",(0,a.kt)("inlineCode",{parentName:"p"},"SINK_TYPE"),"=",(0,a.kt)("inlineCode",{parentName:"p"},"http"),")"," requires the following variables to be set along with Generic ones."),(0,a.kt)("h2",{id:"sink_http_service_url"},(0,a.kt)("inlineCode",{parentName:"h2"},"SINK_HTTP_SERVICE_URL")),(0,a.kt)("p",null,"The HTTP endpoint of the service to which this consumer should PUT/POST data. This can be configured as per the requirement, a constant or a dynamic one ","(","which extract given field values from each message and use that as the endpoint",")",(0,a.kt)("br",{parentName:"p"}),"\n","If service url is constant, messages will be sent as batches while in case of dynamic one each message will be sent as a separate request ","(","Since they\u2019d be having different endpoints",")","."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"http://http-service.test.io")),(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"http://http-service.test.io/test-field/%%s,6")," This will take the value with index 6 from proto and create the endpoint as per the template"),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"required"))),(0,a.kt)("h2",{id:"sink_http_request_method"},(0,a.kt)("inlineCode",{parentName:"h2"},"SINK_HTTP_REQUEST_METHOD")),(0,a.kt)("p",null,"Defines the HTTP verb supported by the endpoint, Supports PUT and POST verbs as of now."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"post")),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"required")),(0,a.kt)("li",{parentName:"ul"},"Default value: ",(0,a.kt)("inlineCode",{parentName:"li"},"put"))),(0,a.kt)("h2",{id:"sink_http_request_timeout_ms"},(0,a.kt)("inlineCode",{parentName:"h2"},"SINK_HTTP_REQUEST_TIMEOUT_MS")),(0,a.kt)("p",null,"Defines the connection timeout for the request in millis."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"10000")),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"required")),(0,a.kt)("li",{parentName:"ul"},"Default value: ",(0,a.kt)("inlineCode",{parentName:"li"},"10000"))),(0,a.kt)("h2",{id:"sink_http_max_connections"},(0,a.kt)("inlineCode",{parentName:"h2"},"SINK_HTTP_MAX_CONNECTIONS")),(0,a.kt)("p",null,"Defines the maximum number of HTTP connections."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"10")),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"required")),(0,a.kt)("li",{parentName:"ul"},"Default value: ",(0,a.kt)("inlineCode",{parentName:"li"},"10"))),(0,a.kt)("h2",{id:"sink_http_retry_status_code_ranges"},(0,a.kt)("inlineCode",{parentName:"h2"},"SINK_HTTP_RETRY_STATUS_CODE_RANGES")),(0,a.kt)("p",null,"Deifnes the range of HTTP status codes for which retry will be attempted."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"400-600")),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"optional")),(0,a.kt)("li",{parentName:"ul"},"Default value: ",(0,a.kt)("inlineCode",{parentName:"li"},"400-600"))),(0,a.kt)("h2",{id:"sink_http_data_format"},(0,a.kt)("inlineCode",{parentName:"h2"},"SINK_HTTP_DATA_FORMAT")),(0,a.kt)("p",null,"If set to ",(0,a.kt)("inlineCode",{parentName:"p"},"proto"),", the log message will be sent as Protobuf byte strings. Otherwise, the log message will be deserialized into readable JSON strings."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"JSON")),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"required")),(0,a.kt)("li",{parentName:"ul"},"Default value: ",(0,a.kt)("inlineCode",{parentName:"li"},"proto"))),(0,a.kt)("h2",{id:"sink_http_headers"},(0,a.kt)("inlineCode",{parentName:"h2"},"SINK_HTTP_HEADERS")),(0,a.kt)("p",null,"Deifnes the HTTP headers required to push the data to the above URL."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"Authorization:auth_token, Accept:text/plain")),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"optional"))),(0,a.kt)("h2",{id:"sink_http_json_body_template"},(0,a.kt)("inlineCode",{parentName:"h2"},"SINK_HTTP_JSON_BODY_TEMPLATE")),(0,a.kt)("p",null,"Deifnes a template for creating a custom request body from the fields of a protobuf message. This should be a valid JSON itself."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},'{"test":"$.routes[0]", "$.order_number" : "xxx"}')),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"optional"))),(0,a.kt)("h2",{id:"sink_http_parameter_source"},(0,a.kt)("inlineCode",{parentName:"h2"},"SINK_HTTP_PARAMETER_SOURCE")),(0,a.kt)("p",null,"Defines the source from which the fields should be parsed. This field should be present in order to use this feature."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"Key")),(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"Message")),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"optional")),(0,a.kt)("li",{parentName:"ul"},"Default value: ",(0,a.kt)("inlineCode",{parentName:"li"},"None"))),(0,a.kt)("h2",{id:"sink_http_parameter_placement"},(0,a.kt)("inlineCode",{parentName:"h2"},"SINK_HTTP_PARAMETER_PLACEMENT")),(0,a.kt)("p",null,"Deifnes the fields parsed can be passed in query parameters or in headers."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"Header")),(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"Query")),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"optional"))),(0,a.kt)("h2",{id:"sink_http_parameter_schema_proto_class"},(0,a.kt)("inlineCode",{parentName:"h2"},"SINK_HTTP_PARAMETER_SCHEMA_PROTO_CLASS")),(0,a.kt)("p",null,"Defines the fully qualified name of the proto class which is to be used for parametrised http sink."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"com.tests.TestMessage")),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"optional"))),(0,a.kt)("h2",{id:"input_schema_proto_to_column_mapping"},(0,a.kt)("inlineCode",{parentName:"h2"},"INPUT_SCHEMA_PROTO_TO_COLUMN_MAPPING")),(0,a.kt)("p",null,"Defines the mapping of the proto fields to header/query fields in JSON format."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},'{"1":"order_number","2":"event_timestamp","3":"driver_id"}')),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"optional"))),(0,a.kt)("h2",{id:"sink_http_oauth2_enable"},(0,a.kt)("inlineCode",{parentName:"h2"},"SINK_HTTP_OAUTH2_ENABLE")),(0,a.kt)("p",null,"Enable/Disable OAuth2 support for HTTP sink."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"true")),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"optional")),(0,a.kt)("li",{parentName:"ul"},"Default value: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"))),(0,a.kt)("h2",{id:"sink_http_oauth2_access_token_url"},(0,a.kt)("inlineCode",{parentName:"h2"},"SINK_HTTP_OAUTH2_ACCESS_TOKEN_URL")),(0,a.kt)("p",null,"Defines the OAuth2 Token Endpoint."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"https://sample-oauth.my-api.com/oauth2/token")),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"optional"))),(0,a.kt)("h2",{id:"sink_http_oauth2_client_name"},(0,a.kt)("inlineCode",{parentName:"h2"},"SINK_HTTP_OAUTH2_CLIENT_NAME")),(0,a.kt)("p",null,"Defines the OAuth2 identifier issued to the client."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"client-name")),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"optional"))),(0,a.kt)("h2",{id:"sink_http_oauth2_client_secret"},(0,a.kt)("inlineCode",{parentName:"h2"},"SINK_HTTP_OAUTH2_CLIENT_SECRET")),(0,a.kt)("p",null,"Defines the OAuth2 secret issued for the client."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"client-secret")),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"optional"))),(0,a.kt)("h2",{id:"sink_http_oauth2_scope"},(0,a.kt)("inlineCode",{parentName:"h2"},"SINK_HTTP_OAUTH2_SCOPE")),(0,a.kt)("p",null,"Space-delimited scope overrides. If scope override is not provided, no scopes will be granted to the token."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Example value: ",(0,a.kt)("inlineCode",{parentName:"li"},"User:read, sys:info")),(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"optional"))))}k.isMDXComponent=!0}}]);