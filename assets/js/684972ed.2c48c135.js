"use strict";(self.webpackChunkfirehose=self.webpackChunkfirehose||[]).push([[775],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},_=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),_=s(n),m=i,k=_["".concat(p,".").concat(m)]||_[m]||d[m]||l;return n?a.createElement(k,r(r({ref:t},u),{},{components:n})):a.createElement(k,r({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=_;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var s=2;s<l;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}_.displayName="MDXCreateElement"},215:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return d}});var a=n(7462),i=n(3366),l=(n(7294),n(3905)),r=["components"],o={},p="HTTP",s={unversionedId:"sinks/http-sink",id:"sinks/http-sink",title:"HTTP",description:"REST API stands for Representational State Transfer and is an architectural pattern for creating web services.",source:"@site/docs/sinks/http-sink.md",sourceDirName:"sinks",slug:"/sinks/http-sink",permalink:"/firehose/sinks/http-sink",draft:!1,editUrl:"https://github.com/odpf/firehose/edit/master/docs/docs/sinks/http-sink.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Troubleshooting",permalink:"/firehose/guides/manage"},next:{title:"GRPC",permalink:"/firehose/sinks/grpc-sink"}},u={},d=[{value:"<code>SINK_HTTP_SERVICE_URL</code>",id:"sink_http_service_url",level:3},{value:"<code>SINK_HTTP_REQUEST_METHOD</code>",id:"sink_http_request_method",level:3},{value:"<code>SINK_HTTP_REQUEST_TIMEOUT_MS</code>",id:"sink_http_request_timeout_ms",level:3},{value:"<code>SINK_HTTP_MAX_CONNECTIONS</code>",id:"sink_http_max_connections",level:3},{value:"<code>SINK_HTTP_RETRY_STATUS_CODE_RANGES</code>",id:"sink_http_retry_status_code_ranges",level:3},{value:"<code>SINK_HTTP_DATA_FORMAT</code>",id:"sink_http_data_format",level:3},{value:"<code>SINK_HTTP_HEADERS</code>",id:"sink_http_headers",level:3},{value:"<code>SINK_HTTP_JSON_BODY_TEMPLATE</code>",id:"sink_http_json_body_template",level:3},{value:"<code>SINK_HTTP_PARAMETER_SOURCE</code>",id:"sink_http_parameter_source",level:3},{value:"<code>SINK_HTTP_PARAMETER_PLACEMENT</code>",id:"sink_http_parameter_placement",level:3},{value:"<code>SINK_HTTP_PARAMETER_SCHEMA_PROTO_CLASS</code>",id:"sink_http_parameter_schema_proto_class",level:3},{value:"<code>INPUT_SCHEMA_PROTO_TO_COLUMN_MAPPING</code>",id:"input_schema_proto_to_column_mapping",level:3},{value:"<code>SINK_HTTP_OAUTH2_ENABLE</code>",id:"sink_http_oauth2_enable",level:3},{value:"<code>SINK_HTTP_OAUTH2_ACCESS_TOKEN_URL</code>",id:"sink_http_oauth2_access_token_url",level:3},{value:"<code>SINK_HTTP_OAUTH2_CLIENT_NAME</code>",id:"sink_http_oauth2_client_name",level:3},{value:"<code>SINK_HTTP_OAUTH2_CLIENT_SECRET</code>",id:"sink_http_oauth2_client_secret",level:3},{value:"<code>SINK_HTTP_OAUTH2_SCOPE</code>",id:"sink_http_oauth2_scope",level:3}],_={toc:d};function m(e){var t=e.components,n=(0,i.Z)(e,r);return(0,l.kt)("wrapper",(0,a.Z)({},_,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"http"},"HTTP"),(0,l.kt)("p",null,"REST API stands for Representational State Transfer and is an architectural pattern for creating web services."),(0,l.kt)("p",null,"An Http sink Firehose ","(",(0,l.kt)("inlineCode",{parentName:"p"},"SINK_TYPE"),"=",(0,l.kt)("inlineCode",{parentName:"p"},"http"),")"," requires the following variables to be set along with Generic ones."),(0,l.kt)("h3",{id:"sink_http_service_url"},(0,l.kt)("inlineCode",{parentName:"h3"},"SINK_HTTP_SERVICE_URL")),(0,l.kt)("p",null,"The HTTP endpoint of the service to which this consumer should PUT/POST data. This can be configured as per the requirement, a constant or a dynamic one ","(","which extract given field values from each message and use that as the endpoint",")",(0,l.kt)("br",{parentName:"p"}),"\n","If service url is constant, messages will be sent as batches while in case of dynamic one each message will be sent as a separate request ","(","Since they\u2019d be having different endpoints",")","."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},"http://http-service.test.io")),(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},"http://http-service.test.io/test-field/%%s,6")," This will take the value with index 6 from proto and create the endpoint as per the template"),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"required"))),(0,l.kt)("h3",{id:"sink_http_request_method"},(0,l.kt)("inlineCode",{parentName:"h3"},"SINK_HTTP_REQUEST_METHOD")),(0,l.kt)("p",null,"Defines the HTTP verb supported by the endpoint, Supports PUT and POST verbs as of now."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},"post")),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"required")),(0,l.kt)("li",{parentName:"ul"},"Default value: ",(0,l.kt)("inlineCode",{parentName:"li"},"put"))),(0,l.kt)("h3",{id:"sink_http_request_timeout_ms"},(0,l.kt)("inlineCode",{parentName:"h3"},"SINK_HTTP_REQUEST_TIMEOUT_MS")),(0,l.kt)("p",null,"Defines the connection timeout for the request in millis."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},"10000")),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"required")),(0,l.kt)("li",{parentName:"ul"},"Default value: ",(0,l.kt)("inlineCode",{parentName:"li"},"10000"))),(0,l.kt)("h3",{id:"sink_http_max_connections"},(0,l.kt)("inlineCode",{parentName:"h3"},"SINK_HTTP_MAX_CONNECTIONS")),(0,l.kt)("p",null,"Defines the maximum number of HTTP connections."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},"10")),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"required")),(0,l.kt)("li",{parentName:"ul"},"Default value: ",(0,l.kt)("inlineCode",{parentName:"li"},"10"))),(0,l.kt)("h3",{id:"sink_http_retry_status_code_ranges"},(0,l.kt)("inlineCode",{parentName:"h3"},"SINK_HTTP_RETRY_STATUS_CODE_RANGES")),(0,l.kt)("p",null,"Deifnes the range of HTTP status codes for which retry will be attempted."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},"400-600")),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"optional")),(0,l.kt)("li",{parentName:"ul"},"Default value: ",(0,l.kt)("inlineCode",{parentName:"li"},"400-600"))),(0,l.kt)("h3",{id:"sink_http_data_format"},(0,l.kt)("inlineCode",{parentName:"h3"},"SINK_HTTP_DATA_FORMAT")),(0,l.kt)("p",null,"If set to ",(0,l.kt)("inlineCode",{parentName:"p"},"proto"),", the log message will be sent as Protobuf byte strings. Otherwise, the log message will be deserialized into readable JSON strings."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},"JSON")),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"required")),(0,l.kt)("li",{parentName:"ul"},"Default value: ",(0,l.kt)("inlineCode",{parentName:"li"},"proto"))),(0,l.kt)("h3",{id:"sink_http_headers"},(0,l.kt)("inlineCode",{parentName:"h3"},"SINK_HTTP_HEADERS")),(0,l.kt)("p",null,"Deifnes the HTTP headers required to push the data to the above URL."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},"Authorization:auth_token, Accept:text/plain")),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"optional"))),(0,l.kt)("h3",{id:"sink_http_json_body_template"},(0,l.kt)("inlineCode",{parentName:"h3"},"SINK_HTTP_JSON_BODY_TEMPLATE")),(0,l.kt)("p",null,"Deifnes a template for creating a custom request body from the fields of a protobuf message. This should be a valid JSON itself."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},'{"test":"$.routes[0]", "$.order_number" : "xxx"}')),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"optional"))),(0,l.kt)("h3",{id:"sink_http_parameter_source"},(0,l.kt)("inlineCode",{parentName:"h3"},"SINK_HTTP_PARAMETER_SOURCE")),(0,l.kt)("p",null,"Defines the source from which the fields should be parsed. This field should be present in order to use this feature."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},"Key")),(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},"Message")),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"optional")),(0,l.kt)("li",{parentName:"ul"},"Default value: ",(0,l.kt)("inlineCode",{parentName:"li"},"None"))),(0,l.kt)("h3",{id:"sink_http_parameter_placement"},(0,l.kt)("inlineCode",{parentName:"h3"},"SINK_HTTP_PARAMETER_PLACEMENT")),(0,l.kt)("p",null,"Deifnes the fields parsed can be passed in query parameters or in headers."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},"Header")),(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},"Query")),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"optional"))),(0,l.kt)("h3",{id:"sink_http_parameter_schema_proto_class"},(0,l.kt)("inlineCode",{parentName:"h3"},"SINK_HTTP_PARAMETER_SCHEMA_PROTO_CLASS")),(0,l.kt)("p",null,"Defines the fully qualified name of the proto class which is to be used for parametrised http sink."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},"com.tests.TestMessage")),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"optional"))),(0,l.kt)("h3",{id:"input_schema_proto_to_column_mapping"},(0,l.kt)("inlineCode",{parentName:"h3"},"INPUT_SCHEMA_PROTO_TO_COLUMN_MAPPING")),(0,l.kt)("p",null,"Defines the mapping of the proto fields to header/query fields in JSON format."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},'{"1":"order_number","2":"event_timestamp","3":"driver_id"}')),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"optional"))),(0,l.kt)("h3",{id:"sink_http_oauth2_enable"},(0,l.kt)("inlineCode",{parentName:"h3"},"SINK_HTTP_OAUTH2_ENABLE")),(0,l.kt)("p",null,"Enable/Disable OAuth2 support for HTTP sink."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},"true")),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"optional")),(0,l.kt)("li",{parentName:"ul"},"Default value: ",(0,l.kt)("inlineCode",{parentName:"li"},"false"))),(0,l.kt)("h3",{id:"sink_http_oauth2_access_token_url"},(0,l.kt)("inlineCode",{parentName:"h3"},"SINK_HTTP_OAUTH2_ACCESS_TOKEN_URL")),(0,l.kt)("p",null,"Defines the OAuth2 Token Endpoint."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},"https://sample-oauth.my-api.com/oauth2/token")),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"optional"))),(0,l.kt)("h3",{id:"sink_http_oauth2_client_name"},(0,l.kt)("inlineCode",{parentName:"h3"},"SINK_HTTP_OAUTH2_CLIENT_NAME")),(0,l.kt)("p",null,"Defines the OAuth2 identifier issued to the client."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},"client-name")),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"optional"))),(0,l.kt)("h3",{id:"sink_http_oauth2_client_secret"},(0,l.kt)("inlineCode",{parentName:"h3"},"SINK_HTTP_OAUTH2_CLIENT_SECRET")),(0,l.kt)("p",null,"Defines the OAuth2 secret issued for the client."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},"client-secret")),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"optional"))),(0,l.kt)("h3",{id:"sink_http_oauth2_scope"},(0,l.kt)("inlineCode",{parentName:"h3"},"SINK_HTTP_OAUTH2_SCOPE")),(0,l.kt)("p",null,"Space-delimited scope overrides. If scope override is not provided, no scopes will be granted to the token."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Example value: ",(0,l.kt)("inlineCode",{parentName:"li"},"User:read, sys:info")),(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"optional"))))}m.isMDXComponent=!0}}]);